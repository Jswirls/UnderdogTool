# -*- coding: utf-8 -*-
"""underdog.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gauciLrzzv1SnT4qCxQDmY2lfY3k-lgm
"""

import pandas as pd

path = input("Type in path to csv: ")
df = pd.read_csv (path)
FAdf = pd.read_csv (r'/content/free_agents.csv')

def GetFreeAgents(df):
  freeAgentList = []
  for i in range(len(df)):
    player = Player(df.at[i, 'First Name'], df.at[i, 'Last Name'], df.at[i, 'Position'], df.at[i, 'Team'], -1)
    freeAgentList.append(player.playerkey)
  return freeAgentList

from operator import itemgetter
class Player:
  def __init__(self, firstname, lastname, pos, team, picknum):
    self.firstname = firstname
    self.lastname = lastname
    self.pos = pos
    self.team = team
    self.playerkey = '{}_{}_{}_{}'.format(self.firstname, self.lastname, self.pos, self.team)
    self.drafts = []
    self.common_expo = []
    self.picknums = [picknum]
  def __repr__(self):
    return '{} {}'.format(self.firstname, self.lastname)
  def AddPick(self, pick):
    self.picknums.append(pick)
  def getPicks(self):
    return self.picknums
  def AddExpo(self, df, num, freeAgents):
    self.drafts.append(num)
    for i in range(len(df)):
      player = Player(df.at[i, 'First Name'], df.at[i, 'Last Name'], df.at[i, 'Position'], df.at[i, 'Team'], df.at[i, 'Pick Number'])
      if self.playerkey != player.playerkey:
        newExpo = True
        for j in self.common_expo:
          if j[0].playerkey == player.playerkey:
            j[3] += 1
            j[4].append(num)
            newExpo = False
            break
        if newExpo == True:
          if player.playerkey in freeAgents:
              player.team = '{}*'.format(player.team)
          self.common_expo.append([player,player.pos,player.team, 1, [num]])
  def GetCommonExpo(self):
    return pd.DataFrame(sorted(self.common_expo, key=itemgetter(3), reverse=True), columns = ['Player','Pos','Team','Times Drafted Together','Common Drafts'])
  def GetPlayerInfo(self):
    print('{} {} {} {} {}\n'.format(self.firstname, self.lastname, self.pos, self.team, self.picknums))
    return pd.DataFrame(sorted(self.common_expo, key=itemgetter(3), reverse=True), columns = ['Player','Pos','Team','Times Drafted Together','Common Drafts'])

def DraftGen(df):
  df2 = df.sort_values(by=['Draft']).iloc[:, 0:8]
  drafts = []
  for i in range(len(df)):
     if df2.at[i, 'Draft'] not in drafts:
       drafts.append(df2.at[i, 'Draft'])
  for i in range(len(df)):
    for k in range(len(drafts)):
      if df2.at[i, 'Draft'] == drafts[k]:
        df2.at[i, 'Draft'] = k + 1
  drafts = dict(iter(df2.groupby('Draft')))
  return drafts

def AddDraft(df, playerlist, num, freeAgents):
  for i in range(len(df)):
    player = Player(df.at[i, 'First Name'], df.at[i, 'Last Name'], df.at[i, 'Position'], df.at[i, 'Team'], df.at[i, 'Pick Number'])
    newPlayer = True
    for j in playerlist:
      if j.playerkey == player.playerkey:
        j.AddExpo(df,num, freeAgents)
        j.AddPick(df.at[i, 'Pick Number'])
        newPlayer = False
        break
    if newPlayer == True:
      if player.playerkey in freeAgents:
        player.team = '{}*'.format(player.team)
      playerlist.append(player)
      player.AddExpo(df,num, freeAgents)
  return playerlist

def PlayerSearch(playerList, search):
  #TODO If players have same name
  searchedPlayer = search.split()
  retList = [player for player in playerList if player.firstname == searchedPlayer[0] and player.lastname == searchedPlayer[1]]
  return retList

def Search():
  search = input("Search: ")
  player = PlayerSearch(playerList, search)
  return player[0].GetPlayerInfo()

freeAgents = GetFreeAgents(FAdf)

drafts = DraftGen(df)

playerList = []
for i in drafts:
  drafts[i] = drafts.get(i).sort_values(by=['Picked At'])
  playerList = AddDraft(drafts.get(i).reset_index(), playerList, i, freeAgents)

Search()

drafts[6]